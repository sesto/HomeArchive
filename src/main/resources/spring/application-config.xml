<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xmlns:elasticsearch="http://www.springframework.org/schema/data/elasticsearch"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/data/elasticsearch http://www.springframework.org/schema/data/elasticsearch/spring-elasticsearch-1.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">


	<context:component-scan base-package="be.ordina.sest.homearchive" />

	<!-- Connection to MongoDB server -->
	<mongo:db-factory host="localhost" port="27017"
		dbname="homearchive_elastic" />
	<mongo:mapping-converter id="converter"
		db-factory-ref="mongoDbFactory" />

	<!-- MongoDB GridFS Template -->
	<bean id="gridTemplate" class="org.springframework.data.mongodb.gridfs.GridFsTemplate">
		<constructor-arg ref="mongoDbFactory" />
		<constructor-arg ref="converter" />
	</bean>

	<!-- mongoTemplate-->
	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg name="mongoDbFactory" ref="mongoDbFactory" />
	</bean>

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

	<!-- Elastic search -->
<!--	<elasticsearch:repositories base-package="be.ordina.sest.homearchive.dao" /> -->

	<elasticsearch:transport-client id="client"
		cluster-nodes="localhost:9300" />
<!--   	<elasticsearch:node-client id="client" local="true" />  -->

	<bean name="elasticsearchTemplate"
		class="org.springframework.data.elasticsearch.core.ElasticsearchTemplate">
		<constructor-arg name="client" ref="client" />
	</bean>

	<!--
		SPRING SECURITY SETUP
	-->
	<bean id="passwordEncoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder">
		<constructor-arg value="secret.salt" />
	</bean>

	<security:authentication-manager id="authenticationManager">
		<security:authentication-provider user-service-ref="userService">
			<security:password-encoder ref="passwordEncoder"></security:password-encoder>
		</security:authentication-provider>
	</security:authentication-manager>

	<security:http
			realm="Protected API"
			use-expressions="true"
			auto-config="false"
			create-session="stateless"
			entry-point-ref="unauthorizedEntryPoint"
			authentication-manager-ref="authenticationManager">
		<security:custom-filter ref="authenticationTokenProcessingFilter" position="FORM_LOGIN_FILTER" />
		<security:intercept-url pattern="/api/user/authenticate" access="permitAll" />
		<security:intercept-url method="GET" pattern="/api/fileService/**" access="hasRole('ROLE_USER')" />
		<security:intercept-url method="PUT" pattern="/api/fileService/**" access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url method="POST" pattern="/api/fileService/**" access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url method="DELETE" pattern="/api/fileService/**" access="hasRole('ROLE_ADMIN')" />
	</security:http>

	<bean id="unauthorizedEntryPoint" class="be.ordina.sest.homearchive.security.UnauthorizedEntryPoint" />

	<bean class="be.ordina.sest.homearchive.security.AuthenticationTokenProcessingFilter" id="authenticationTokenProcessingFilter">
		<constructor-arg ref="userService" />
	</bean>

	<bean id="userService" class="be.ordina.sest.homearchive.service.UserServiceImpl">

	</bean>


</beans>
